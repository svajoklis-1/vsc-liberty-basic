{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Liberty BASIC",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#labels"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#builtins"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.lblinecomment.libertybasic",
					"match": "(?i)'.*"
				},
				{
					"name": "comment.line.lbremcomment.libertybasic",
					"match": "(?i)(rem[ \\t]+)(.*)",
					"captures": {
						"1": { "name": "remhead.comment.line.lbremcomment.libertybasic" },
						"2": { "name": "rembody.comment.line.lbremcomment.libertybasic" }
					}
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.libertybasic",
					"match": "(?i)(?<=[^a-z0-9$]|^)(if|else|then|while|wend|for|to|step|next|return|end|exit|call|select|case|resume|stop|wait|goto|gosub)(?=[^a-z0-9$.]|$)"
				},
				{
					"name": "storage.type.libertybasic",
					"match": "(?i)(?<=[^a-z0-9$]|^)(global|let|data|function|sub|dim)(?=[^a-z0-9$.]|$)"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.libertybasic",
			"begin": "\"",
			"end": "(\"|$)",
			"patterns": [
			]
		},
		"numbers": {
			"name": "constant.numeric.libertybasic",
			"match": "(?i)\\b(\\d+(\\.\\d+)?(e-?\\d+)?)\\b"
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.lbcharacteroperator.libertybasic",
					"match": "(?i)(\\+|-|\\/|\\*|\\(|\\)|;|:)"
				},
				{
					"name": "keyword.operator.lbwordoperator.libertybasic",
					"match": "(?i)(and|or|xor)"
				}
			]
		},
		"builtins": {
			"patterns": [
				{
					"name": "support.function.lbfunction.libertybasic",
					"match": "(?i)(?<=[^a-z0-9$]|^)(abs|acs|after\\$|afterlast\\$|asc|asn|atn|chr\\$|cos|date\\$|dechex\\$|eof|exp|eval|hbmp|hexdec|httpget\\$|hwnd|idecode\\$|idefilename\\$|inp|input\\$|inputto\\$|instr|int|left\\$|len|lof|log|lower\\$|max|mid\\$|midipos|min|mkdir|remchar\\$|replstr\\$|right\\$|rmdir|rnd|sin|space\\$|sqr|str\\$|tab|tan|time\\$|trim\\$|txcount|upper\\$|upto\\$|using|val|word\\$)(?=[^a-z0-9$.]|$)"
				},
				{
					"name": "support.function.lbsubroutine.libertybasic",
					"match": "(?i)(?<=[^a-z0-9$]|^)(beep|bmpsave|byref|call|callback|calldll|close|cls|confirm|cursor|dump|field|files|get|gettrim|input|inputcsv|kill|line[ \\t]+input|loadbmp|locate|lprint|mainwin|maphandle|mod|name|as|nomainwin|notice|on[ \\t]+error|oncomerror|open|out|playmidi|playwave|print|prompt|put|randomize|read|readjoystick|redim|rem|refresh|resizehandler|restore|run|scan|seek|sort|stopmidi|struct|stylebits|timer|titlebar|trace|unloadbmp|winstring)(?=[^a-z0-9$.]|$)"
				},
				{
					"name": "support.function.lbuicomponent.libertybasic",
					"match": "(?i)(?<=[^a-z0-9$]|^)(bmpbutton|button|checkbox|colordialog|combobox|filedialog|fontdialog|graphicbox|groupbox|listbox|menu|radiobutton|statictext|textbox|texteditor)(?=[^a-z0-9$.]|$)"
				},
				{
					"name": "support.variable.libertybasic",
					"match": "(?<=[^a-z0-9$]|^)(CommandLine\\$|DefaultDir\\$|DisplayWidth|DisplayHeight|Drives\\$|Inkey\\$|Platform\\$|StartupDir\\$|UpperLeft[XY]|Version\\$)(?=[^a-z0-9$.]|$)"
				}
			]
		},
		"labels": {
			"patterns": [
				{
					"name": "entity.name.tag.libertybasic",
					"match": "(?i)\\[[a-z.][a-z0-9.]*\\]"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "entity.name.libertybasic",
					"match": "(?i)(?<=[^a-z0-9]|^)([a-z_][a-z0-9.]*\\$?)(?=[^a-z0-9.]|$)"
				},
				{
					"name": "entity.name.lbhandle.libertybasic",
					"match": "(?i)(?<=[^a-z0-9]|^)(#[a-z0-9.]*\\$?)(?=[^a-z0-9.]|$)"
				}
			]
		}
	},
	"scopeName": "source.libertybasic"
}
